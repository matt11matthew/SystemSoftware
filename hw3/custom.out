==3029== Memcheck, a memory error detector
==3029== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3029== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==3029== Command: ./compiler custom.spl
==3029== 
==3029== Invalid read of size 8
==3029==    at 0x10AF06: scope_check_if_stmt (scope_check.c:126)
==3029==    by 0x10B1A3: scope_check_stmt (scope_check.c:142)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3029== 
==3029== 
==3029== Process terminating with default action of signal 11 (SIGSEGV)
==3029==  Access not within mapped region at address 0x0
==3029==    at 0x10AF06: scope_check_if_stmt (scope_check.c:126)
==3029==    by 0x10B1A3: scope_check_stmt (scope_check.c:142)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==    by 0x10A85E: scope_check_program_s (scope_check.c:18)
==3029==    by 0x10B01C: scope_check_stmt (scope_check.c:139)
==3029==    by 0x10B213: scope_check_stmts (scope_check.c:158)
==3029==  If you believe this happened as a result of a stack
==3029==  overflow in your program's main thread (unlikely but
==3029==  possible), you can try to increase the size of the
==3029==  main thread stack using the --main-stacksize= flag.
==3029==  The main thread stack size used in this run was 8388608.
==3029== 
==3029== HEAP SUMMARY:
==3029==     in use at exit: 291,429 bytes in 218 blocks
==3029==   total heap usage: 220 allocs, 2 frees, 295,997 bytes allocated
==3029== 
==3029== LEAK SUMMARY:
==3029==    definitely lost: 729 bytes in 66 blocks
==3029==    indirectly lost: 0 bytes in 0 blocks
==3029==      possibly lost: 0 bytes in 0 blocks
==3029==    still reachable: 290,700 bytes in 152 blocks
==3029==         suppressed: 0 bytes in 0 blocks
==3029== Rerun with --leak-check=full to see details of leaked memory
==3029== 
==3029== For lists of detected and suppressed errors, rerun with: -s
==3029== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
